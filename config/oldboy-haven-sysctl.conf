[root@supernode ~]# cat /etc/sysctl.conf
# # # #
# this is originally created as a...
# cryptostorm client-side *nix sysctl.conf kernel params define
# (with a heavy focus on network-centric hardening & refinement)
# version: cryptohaven02{beta}
# # #
# this is a work in progress, so if you see bugs or improvements...
# make a note at https://github.com/cryptostorm/cstorm_cryptohaven.science/tree/master/config
# # #
# NOTE: some notably unorthodox stuff in here, fair warning
# primary goal is protection against injected packet attack models
# see http://darkweb.science for additional details wrt CIN weapons-systems
# # #
# ps: Free Chelsea. Now.
# # # #

kernel.domainname = oldboy.cryptostorm.net
net.ipv4.ip_local_port_range = 2000     65000

# fuck ip6
net.ipv6.conf.all.disable_ipv6=1
net.ipv6.conf.default.disable_ipv6=1
net.ipv6.conf.lo.disable_ipv6=1

# syncookies are not useful nowadays and have privacy risks, so disable
net.ipv4.tcp_syncookies=0

# tighten up standards for when to dump or refuse to instantiate TCP sessions
net.ipv4.tcp_sack=0
net.ipv4.tcp_timestamps=1
net.ipv4.tcp_synack_retries=2
net.ipv4.tcp_syn_retries=2
net.ipv4.tcp_window_scaling=0
net.ipv4.tcp_fin_timeout=15
net.ipv4.tcp_keepalive_time=42
net.ipv4.tcp_max_tw_buckets=777
net.ipv4.tcp_max_syn_backlog=666

# packet fragmentation constraints, pretty much super-paranoid settings 
net.ipv4.ipfrag_high_thresh=4194   
net.ipv4.ipfrag_low_thresh=3145   
net.ipv4.ipfrag_max_dist=24
net.ipv4.ipfrag_secret_interval=99
net.ipv4.ipfrag_time=30

# tighten up kernel-defined auto-tuning TCP buffer limits
net.core.rmem_max=8388608
net.core.wmem_max=8388608
net.core.netdev_max_backlog=5000

# NIC bindings and other topopological hygeine
net.ipv4.ip_no_pmtu_disc=0
net.ipv4.ip_nonlocal_bind=0
# net.ipv4.ip_forward=0
net.ipv4.ip_default_ttl=86
net.ipv4.ip_dynaddr=0
net.ipv4.ip_early_demux=1
net.ipv4.ip_forward_use_pmtu=0

# note this is normally disabled for client use; server-side, require enabled
net.ipv4.ip_forward=1

# not routing redirected ICMP packets, in or out
net.ipv4.conf.all.accept_redirects=0
net.ipv4.conf.default.accept_redirects=0
net.ipv4.conf.lo.accept_redirects=0
net.ipv4.conf.default.send_redirects=0
net.ipv4.conf.all.send_redirects=0
net.ipv4.conf.lo.send_redirects=0

# Do not accept packets using 'source route' function to convince us they're legit, 'cause prolly not
net.ipv4.conf.all.accept_source_route=0
net.ipv4.conf.default.accept_source_route=0
net.ipv4.conf.lo.accept_source_route=0

# spoof protection heuristic, viz. 'validation by reversed path' (as specified in RFC1812)
net.ipv4.conf.default.rp_filter=1
net.ipv4.conf.all.rp_filter=1
net.ipv4.conf.lo.rp_filter=1

# esoteric metaparameters
kernel.sysrq=0
kernel.exec-shield=1
net.ipv4.fwmark_reflect=0
kernel.randomize_va_space=1
net.ipv4.igmp_max_memberships=13
net.ipv4.igmp_max_msf=10

# de-cork'd because really not appropriate for nodes
# see: http://kernelnewbies.org/Linux_3.14#head-ffc580bfdcfa9ce8f20f9489357172d55d8d51fe
net.ipv4.tcp_autocorking=0
net.ipv4.tcp_autocorking=0

# kernel packet logging mechanics
kernel.core_uses_pid=1
net.ipv4.icmp_ignore_bogus_error_responses=1
net.ipv4.conf.default.log_martians=1
net.ipv4.conf.all.log_martians=1
net.ipv4.conf.lo.log_martians=1

# accepting ping requests, but that's about it for icmp
net.ipv4.icmp_echo_ignore_all=0
net.ipv4.icmp_ratelimit=42
net.ipv4.icmp_ratemask=68
net.ipv4.icmp_echo_ignore_broadcasts=1
net.ipv4.icmp_errors_use_inbound_ifaddr=1

# still fine-tuning these, tbh
net.ipv4.inet_peer_maxttl=300
net.ipv4.inet_peer_minttl=120
net.ipv4.inet_peer_threshold=6566
net.ipv4.conf.all.igmpv2_unsolicited_report_interval=10000
net.ipv4.conf.all.igmpv3_unsolicited_report_interval=1000
net.ipv4.conf.all.medium_id=0
net.ipv4.conf.all.promote_secondaries=0

# ARP-y paranoia on the LAN, guey
net.ipv4.conf.all.accept_local=0
net.ipv4.conf.all.route_localnet=0
net.ipv4.conf.all.src_valid_mark=0
net.ipv4.conf.all.arp_accept=0
net.ipv4.conf.all.arp_announce=0
net.ipv4.conf.all.arp_ignore=0
net.ipv4.conf.all.arp_notify=0
net.ipv4.conf.all.bootp_relay=0
net.ipv4.conf.all.disable_policy=0
net.ipv4.conf.all.disable_xfrm=1
net.ipv4.conf.all.mc_forwarding=0

# some kernel-hardening stuff, 27 May 2015 ~pj
net.ipv4.conf.all.proxy_arp_pvlan=0
net.ipv4.conf.default.proxy_arp_pvlan=0
net.ipv4.conf.all.proxy_arp=0
net.ipv4.conf.default.proxy_arp=0
net.ipv4.conf.all.arp_filter=1
net.ipv4.conf.default.arp_filter=1
net.ipv4.conf.all.shared_media=0
net.ipv4.conf.default.shared_media=0


# experimental mods added by pj during voodoo deployment 9 Oct 2015, on supernode 'loup'
# some are duplicates of entries above, no question - deduplication required! :-)
net.ipv4.tcp_abort_on_overflow = 1
net.ipv4.tcp_adv_win_scale = 0
net.ipv4.tcp_allowed_congestion_control = cubic reno
net.ipv4.tcp_app_win = 56
net.ipv4.tcp_available_congestion_control = cubic reno
net.ipv4.tcp_base_mss = 786
net.ipv4.tcp_challenge_ack_limit = 10000
net.ipv4.tcp_congestion_control = cubic
net.ipv4.tcp_dsack = 1
net.ipv4.tcp_early_retrans = 3
net.ipv4.tcp_ecn = 2
net.ipv4.tcp_fack = 0
net.ipv4.tcp_fastopen = 0
net.ipv4.tcp_fastopen_key = 00000000-00000000-00000000-00000000
net.ipv4.tcp_fin_timeout = 32
net.ipv4.tcp_frto = 2
net.ipv4.tcp_fwmark_accept = 0
net.ipv4.tcp_invalid_ratelimit = 50
net.ipv4.tcp_keepalive_intvl = 12
net.ipv4.tcp_keepalive_probes = 13
net.ipv4.tcp_keepalive_time = 56
net.ipv4.tcp_limit_output_bytes = 1310720
net.ipv4.tcp_low_latency = 0
net.ipv4.tcp_max_orphans = 2621440
net.ipv4.tcp_max_reordering = 30
net.ipv4.tcp_max_syn_backlog = 655350
net.ipv4.tcp_max_tw_buckets = 13107200
net.ipv4.tcp_mem = 183900	245203	36780000
net.ipv4.tcp_min_tso_segs = 2
net.ipv4.tcp_moderate_rcvbuf = 1
net.ipv4.tcp_mtu_probing = 1
net.ipv4.tcp_no_metrics_save = 0
net.ipv4.tcp_notsent_lowat = -1
net.ipv4.tcp_orphan_retries = 1
net.ipv4.tcp_probe_interval = 60
net.ipv4.tcp_probe_threshold = 8
net.ipv4.tcp_reordering = 0
net.ipv4.tcp_retrans_collapse = 1
net.ipv4.tcp_retries1 = 3
net.ipv4.tcp_retries2 = 6
net.ipv4.tcp_rfc1337 = 1
net.ipv4.tcp_sack = 0
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_stdurg = 0
net.ipv4.tcp_syn_retries = 5
net.ipv4.tcp_synack_retries = 3
net.ipv4.tcp_thin_dupack = 0
net.ipv4.tcp_thin_linear_timeouts = 0
net.ipv4.tcp_tso_win_divisor = 3
net.ipv4.tcp_wmem = 40960 163840 167772160
net.netfilter.nf_conntrack_tcp_be_liberal = 0
net.netfilter.nf_conntrack_tcp_loose = 0
net.netfilter.nf_conntrack_tcp_max_retrans = 8
net.netfilter.nf_conntrack_tcp_timeout_close = 18
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 36
net.netfilter.nf_conntrack_tcp_timeout_established = 40
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 18
net.netfilter.nf_conntrack_tcp_timeout_last_ack = 36
net.netfilter.nf_conntrack_tcp_timeout_max_retrans = 3000
net.netfilter.nf_conntrack_tcp_timeout_syn_recv = 10
net.netfilter.nf_conntrack_tcp_timeout_syn_sent = 10
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 10
net.netfilter.nf_conntrack_tcp_timeout_unacknowledged = 300

# disabled as apparently deprecated or never existed outside fantasy?
# net.ipv4.conf.all.tcp_tw_reuse=0
# net.ipv4.conf.default.tcp_tw_reuse=0
# net.ipv4.all.tcp_tw_recycle=0
# net.ipv4.default.tcp_tw_recycle=0
# net.ipv4.conf.all.mc_forwarding=0

## flush routes & c-ya :-)
net.ipv4.route.flush=1
